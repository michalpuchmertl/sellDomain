{"version":3,"sources":["components/TweetDisplayer/Tweet.jsx","components/TweetDisplayer/TweetDisplayer.jsx","pages/Homepage/Homepage.jsx","index.js"],"names":["Tweet","props","id","username","text","className","href","splittedText","split","i","length","wrapToElement","Row","data","index","setSize","rowRef","useRef","React","useEffect","current","getBoundingClientRect","height","ref","TweetDisplayer","useState","tweets","setTweets","listRef","sizeMap","useCallback","size","resetAfterIndex","getSize","socket","io","on","console","log","tweet","tweetData","includes","users","prev","width","itemCount","itemSize","itemData","style","getList","App","document","location","hostname","ReactDOM","render","getElementById"],"mappings":"4PA2BeA,MAzBf,SAAeC,GACX,IAAQC,EAAuBD,EAAvBC,GAAIC,EAAmBF,EAAnBE,SAAUC,EAASH,EAATG,KAYtB,OACI,qBAAKC,UAAU,QAAf,SACI,mBAAGC,KAAI,8BAAyBH,EAAzB,mBAA4CD,GAAnD,SACI,gCAbU,WAGlB,IAFA,IAAIK,EAAeH,EAAKI,MAAM,2BAErBC,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,GAAK,EAC1CF,EAAaE,GAAK,iCAAiBF,EAAaE,IAAjBA,GAGnC,OAAO,4BAAIF,IAOEI,GACD,+BAAOR,YCXrBS,G,MAAM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAClBC,EAASC,mBAMf,OAJAC,IAAMC,WAAU,WACZJ,EAAQD,EAAOE,EAAOI,QAAQC,wBAAwBC,UACrD,CAACP,EAASD,IAGX,qBAAKS,IAAKP,EAAV,SACI,cAAC,EAAD,CAAOd,GAAIW,EAAKC,GAAOZ,GAAIC,SAAUU,EAAKC,GAAOX,SAAUC,KAAMS,EAAKC,GAAOV,WA8E1EoB,MAxEf,SAAwBvB,GAEpB,IAAQI,EAAcJ,EAAdI,UAER,EAA4BoB,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAUX,mBACVY,EAAUZ,iBAAO,IAEjBF,EAAUe,uBAAY,SAAChB,EAAOiB,GAChCF,EAAQT,QAAR,2BAAuBS,EAAQT,SAA/B,kBAAyCN,EAAQiB,IACjDH,EAAQR,QAAQY,gBAAgBlB,KACjC,IAEGmB,EAAU,SAAAnB,GAAK,OAAIe,EAAQT,QAAQN,IAAU,IAgDnD,OA7CAK,qBAAU,WACN,IAAMe,EAASC,eACfD,EAAOE,GAAG,WAAW,WACjBC,QAAQC,IAAI,6BAGhBJ,EAAOE,GAAG,SAAS,SAACG,GAChB,IAAMC,EAAY,CACdtC,GAAIqC,EAAM1B,KAAKX,GACfE,KAAMmC,EAAM1B,KAAKT,KACjBD,SAAS,IAAD,OAAMoC,EAAME,SAASC,MAAM,GAAGvC,WAE1CwB,GAAU,SAAAgB,GAAI,OAAKH,GAAL,mBAAmBG,YAEtC,IAgCC,sBAAKtC,UAAU,QAAf,UACI,oBAAIA,UAAU,sBAAd,4BACA,qBAAKA,UAAS,kCAA6BA,GAA3C,SA/BQ,WACZ,GAAGqB,EAAOhB,OAAS,EACf,OACI,cAAC,IAAD,CACAa,IAAKK,EACLN,OAAQ,IACRsB,MAAM,OACNC,UAAWnB,EAAOhB,OAClBoC,SAAUb,EACVc,SAAUrB,EANV,SASC,gBAAGb,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOkC,EAAhB,EAAgBA,MAAhB,OACG,qBAAKA,MAAOA,EAAZ,SACA,cAAC,EAAD,CACInC,KAAMA,EACNC,MAAOA,EACPC,QAASA,SAepBkC,SCzEEC,MAdf,WACE,OACE,qBAAK7C,UAAU,YAAf,SACE,sBAAKA,UAAU,0EAAf,UACE,oBAAGA,UAAU,uBAAb,oBAA2C,mBAAGC,KAAI,kBAAa6C,SAASC,SAASC,UAAYhD,UAAU,eAA5D,SAA4E8C,SAASC,SAASC,WAAzI,mBACA,mBAAG/C,KAAK,uFAAR,SACE,wBAAQD,UAAU,kBAAlB,4BAEF,cAAC,EAAD,UCNRiD,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.f16fc41c.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Tweet(props) {\n    const { id, username, text } = props\n\n    const wrapToElement = () => {\n        let splittedText = text.split(/(\\b#PandoraPapers+\\b)/gi);\n        \n        for (var i = 1; i < splittedText.length; i += 2) {\n            splittedText[i] = <strong key={i}>{splittedText[i]}</strong>;\n        }\n\n        return <p>{splittedText}</p>;\n    }\n\n    return (\n        <div className=\"tweet\">\n            <a href={`https://twitter.com/${username}/status/${id}`}>\n                <div>\n                    {wrapToElement()}\n                    <span>{username}</span>\n                </div>\n            </a>\n        </div>\n    )\n}\n\nexport default Tweet\n\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport { io } from \"socket.io-client\";\n\nimport { VariableSizeList as List } from 'react-window';\n\nimport Tweet from './Tweet';\nimport './tweetdisplayer.scss';\nimport sampleTweets from './sampleTweets';\n\nconst Row = ({ data, index, setSize }) => {\n    const rowRef = useRef();\n\n    React.useEffect(() => {\n        setSize(index, rowRef.current.getBoundingClientRect().height);\n      }, [setSize, index]);\n  \n    return (\n        <div ref={rowRef}>\n            <Tweet id={data[index].id} username={data[index].username} text={data[index].text} />\n        </div>\n    );\n  };\n  \n\nfunction TweetDisplayer(props) {\n\n    const { className } = props\n\n    const [tweets, setTweets] = useState([])\n\n    const listRef = useRef();\n    const sizeMap = useRef({});\n\n    const setSize = useCallback((index, size) => {\n        sizeMap.current = { ...sizeMap.current, [index]: size };\n        listRef.current.resetAfterIndex(index);\n    }, []);\n\n    const getSize = index => sizeMap.current[index] || 50;\n    \n\n    useEffect(() => {\n        const socket = io()\n        socket.on('connect', () => {\n            console.log('Connected to server...')\n        })\n\n        socket.on('tweet', (tweet) => {\n            const tweetData = {\n                id: tweet.data.id,\n                text: tweet.data.text,\n                username: `@${tweet.includes.users[0].username}`\n            }\n            setTweets(prev => [tweetData, ...prev])\n        })\n    }, [])\n\n\n    const getList = () => {\n        if(tweets.length > 0) {\n            return(\n                <List\n                ref={listRef}\n                height={400}\n                width=\"100%\"\n                itemCount={tweets.length}\n                itemSize={getSize}\n                itemData={tweets}\n                >\n\n                {({ data, index, style }) => (\n                    <div style={style}>\n                    <Row\n                        data={data}\n                        index={index}\n                        setSize={setSize}\n                    />\n                    </div>\n                )}\n            </List>\n            )\n        }\n    }\n    \n\n\n    return (        \n        <div className=\"col-8\">\n            <h2 className=\"mt-4 text-secondary\">#PandoraPapers</h2>\n            <div className={`tweet-displayer-wrapper ${className}`}>\n            {getList()}\n            </div>\n        </div>\n    )\n}\n\nexport default TweetDisplayer\n\n","import './homepage.scss'\nimport TweetDisplayer from '../../components/TweetDisplayer/TweetDisplayer';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex flex-column min-vh-100 justify-content-center align-items-center\">\n        <p className=\"text-white font-bold\">Domain <a href={`https://${document.location.hostname}`} className=\"text-warning\">{document.location.hostname}</a> is for sale!</p>\n        <a href=\"mailto:puchmertl.michal12@gmail.com?subject=Domain%20inquiry%20-%20pandora-papers.eu\">\n          <button className=\"btn btn-warning\">Send inquiry</button>\n        </a>\n        <TweetDisplayer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './pages/Homepage/Homepage';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}